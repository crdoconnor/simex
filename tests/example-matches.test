{% for python_version in ["2.7.10", "3.5.0"] %}
- name: Example matches
  tags:
    - match
  preconditions:
    python_version: {{ python_version }}
    files:
      example_code1.py: |
        {% raw %}
        from simex import Simex, DefaultSimex
        simex = Simex({"url": r".*?", "anything": r".*?"})
        regex = simex.compile("""<a href="{{ url }}">{{ anything }}</a>""")
        assert regex.match("""<a href="http://www.cnn.com">CNN</a>""") is not None
        {% endraw %}

      example_code2.py: |
        {% raw %}
        from simex import Simex, DefaultSimex
        simex = DefaultSimex()
        regex = simex.compile("""<a href="{{ url }}">{{ anything }}</a>""")
        assert regex.match("""<a href="http://www.cnn.com">CNN</a>""") is not None

        regex = simex.compile("""<a href="mailto:{{ email }}">{{ anything }}</a>""")
        assert regex.match("""<a href="mailto:billg@microsoft.com">Email bill</a>""") is not None
        {% endraw %}

      example_code3.py: |
        {% raw %}
        from simex import Simex, DefaultSimex
        simex = DefaultSimex(open_delimeter="[[[", close_delimeter="]]]")
        regex = simex.compile("""<a href="[[[ url ]]]">[[[ anything ]]]</a>""")
        assert regex.match("""<a href="http://www.cnn.com">CNN</a>""") is not None
        {% endraw %}

      example_code4.py: |
        {% raw %}
        from simex import Simex, KeyNotFound
        simex = Simex()

        try:
            regex = simex.compile("""{{ nonexistentkey }}""")
        except KeyNotFound:
            keynotfound = True

        assert keynotfound == True
        {% endraw %}
      example_code5.py: |
        {% raw %}
        from simex import Simex
        simex = Simex({"url": r".*?", "anything": r".*?"}, exact=True)
        regex = simex.compile("""<a href="{{ url }}">{{ anything }}</a>""")
        assert regex.match("""<a href="http://www.cnn.com">CNN</a> EXTENDED STRING""") is None
        {% endraw %}
      example_code6.py: |
        {% raw %}
        from simex import Simex
        simex = Simex({"url": r".*?", "anything": r".*?"}, flexible_whitespace=True)
        regex = simex.compile("""<a  href="{{ url }}">{{ anything }}</a>""")
        assert regex.match("""<a href="http://www.cnn.com">CNN</a> EXTENDED STRING""") is None
        {% endraw %}
  scenario:
    - Run: example_code1.py
    - Exited successfully
    - Run: example_code2.py
    - Exited successfully
    - Run: example_code3.py
    - Exited successfully
    - Run: example_code4.py
    - Exited successfully
    - Run: example_code5.py
    - Exited successfully
    - Run: example_code6.py
    - Exited successfully
{% endfor %}
